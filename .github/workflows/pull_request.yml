name: ci

on:
  pull_request:
    types: [ opened, synchronize, reopened, ready_for_review ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        design-pattern: [
          "singleton",
        ]
    steps:

      - name: Git Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          #Instead of manually configure caching of gradle, use an action which is provided. Details here: https://github.com/actions/setup-java
          cache: gradle

      - name: Check for Changes
        uses: dorny/paths-filter@v2.11.1
        id: changes
        with:
          filters: |
            source_code:
              - '.github/workflows/**'
              - '${{ matrix.design-pattern }}/src/**'
              - '${{ matrix.design-pattern }}/build.gradle.kts'
              - 'build.gradle.kts'
              - 'gradle/libs.versions.toml'
              - 'settings.gradle.kts'
              - 'gradle.properties'
            docs:
              - '${{ matrix.design-pattern }}/README.md'
              - README.md

      - name: Lint README
        if: steps.changes.outputs.docs == 'true'
        uses: avto-dev/markdown-lint@v1
        env:
          DESIGN_PATTERN: ${{ matrix.design-pattern }}
        with:
          config: './config/markdown-lint/rules.json'
          args: '${DESIGN_PATTERN}/README.md'

      - name: Gradle Build
        if: steps.changes.outputs.source_code == 'true'
        id: tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./gradlew ${{ matrix.design-pattern }}:spotlessCheck \
              ${{ matrix.design-pattern }}:build \
          

      - name: Code Coverage
        if: steps.changes.outputs.source_code == 'true'
        id: code-climate
        run: |
          curl --silent -L \
            https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 \
            > ./cc-test-reporter

          chmod +x ./cc-test-reporter

          ./cc-test-reporter format-coverage \
            "${{ matrix.design-pattern }}/build/reports/jacoco/test/jacocoTestReport.xml" \
            --input-type jacoco \
            --output "codeclimate.${{ matrix.design-pattern }}.json"
        env:
          JACOCO_SOURCE_PATH: "${{ matrix.design-pattern }}/src/main/kotlin"

      - name: Upload Code Coverage artifacts
        if: steps.changes.outputs.source_code == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: |
            codeclimate.${{ matrix.design-pattern }}.json        

  ci-check:
    if: always()
    needs:
      - ci
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether all CI jobs are succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
