name: ci

on:
  pull_request:
    types: [ opened, synchronize, reopened, ready_for_review ]
  pull_request_target:
    types: [ opened, synchronize, reopened, ready_for_review ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        design-pattern: [
          "singleton",
        ]
    steps:

      - name: Git Checkout
        if: github.event_name != 'pull_request_target'
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac
        # Do not trigger a checkout when opening PRs from a fork (helps avoid
        # "pwnn request". See https://docs.github.com/en/actions/reference/events-that-trigger-workflows#pull_request_target )
        with:
          fetch-depth: 0

      - name: Install Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          #Instead of manually configure caching of gradle, use an action which is provided. Details here: https://github.com/actions/setup-java
          cache: gradle

      - name: Check for Changes
        uses: dorny/paths-filter@v2.11.1
        id: changes
        with:
          filters: |
            source_code:
              - '.github/workflows/**'
              - '${{ matrix.design-pattern }}/src/**'
              - '${{ matrix.design-pattern }}/build.gradle.kts'
              - 'build.gradle.kts'
              - 'settings.gradle.kts'
              - 'gradle.properties'
            docs:
              - '${{ matrix.design-pattern }}/README.md'
              - README.md

      - name: Lint README
        if: steps.changes.outputs.docs == 'true'
        uses: avto-dev/markdown-lint@v1
        env:
          DESIGN_PATTERN: ${{ matrix.design-pattern }}
        with:
          config: './.github/config/markdown-lint/rules.json'
          args: '${DESIGN_PATTERN}/README.md'

      - name: Gradle Build
        if: steps.changes.outputs.source_code == 'true'
        id: tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew ${{ matrix.design-pattern }}:build
